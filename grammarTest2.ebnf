program -> stats | EPSILON
stats -> stat stats1 | EPSILON
stats1 -> ENTER stats | EPSILON
A -> stat A | EPSILON
B -> ENTER B | EPSILON
stat -> simple_stat | compound_stat
compound_stat -> if_stat | while_stat | for_stat | funcion
simple_stat -> assignment | log | leer | importar | retornar | atom
assignment -> variable '=' assignment1
assignment1 -> assignment | expr
if_stat -> 'if' '(' condition_block ')' C
C -> 'else' stat_block | EPSILON
while_stat -> 'while' '(' expr ')' stat_block
for_stat -> 'for' 'id' 'in' expr stat_block
log -> 'log' '(' expr ')'
leer -> 'leer' '(' variable ')'
funcion -> 'funcion' 'id' '(' E ')' Z 'end' 'funcion'
Z -> B | A
E -> parametro F | EPSILON
F -> ',' parametro F | EPSILON
importar -> 'importar' 'id' K | 'desde' 'id' 'importar' 'id'
K -> '.' 'id' K | EPSILON
retornar -> 'retorno' '(' expr ')' ENTER
condition_block -> expr condition_block1 stat_block
condition_block1 -> ENTER | EPSILON
stat_block -> '{' Z '}' | stat ENTER
array -> 'OKEY' G 'CKEY'
objeto -> '{' L '}'
L -> Keyvalue M | EPSILON
M -> ',' Keyvalue M | EPSILON
Keyvalue -> 'id' ':' expr
G -> expr H | EPSILON
H -> ',' expr H | EPSILON
variable -> 'id' K variable1
variable1 -> J | EPSILON
J -> '(' G ')' | EPSILON
parametro -> 'id' parametro1
parametro1 -> '=' expr | EPSILON
expr -> '!' expr | '(' expr ')' | atom op
op -> N expr | EPSILON
N -> '^' | '*' | '/' | '%' | '+' | '-' | '<=' | '>=' | '<' | '>' | '==' | '!=' | '&&' | 'OR'
atom -> 'token_integer' | 'token_float' | 'true' | 'false' | 'token_string' | array | variable | 'nil' | objeto
ENTER -> 'token_salto_linea' NEWLINE
NEWLINE -> ENTER | EPSILON
